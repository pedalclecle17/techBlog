- name: Setup docker on server
  hosts: 
    - controlplane 
    - node
  become: True
  tasks:
    - name: Update hosts file
      copy:
          src: hosts
          dest: /etc/
          follow: yes

    - name: Setup time zone
      command: timedatectl set-timezone Asia/Tokyo

    - name: Install packages for docker
      apt:
        name:
          - ca-certificates 
          - curl
          - gnupg
        update_cache: true 

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Install golang
      apt:
        name:
          golang-go
        update_cache: true

    - name: Checkout cri-dockerd from git
      git:
        repo: 'https://github.com/Mirantis/cri-dockerd.git'
        dest: /home/ubuntu/cri-dockerd
        
    - name: Make bin directory
      shell: mkdir -p bin
      args:
        chdir: /home/ubuntu/cri-dockerd
        
    - name: Build cri-dockerd
      shell: go build -o bin/cri-dockerd
      args:
        chdir: /home/ubuntu/cri-dockerd

    - name: Make user local bin directory
      shell: mkdir -p /usr/local/bin
      
    - name: Install cri-dockerd
      shell: install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
      args:
        chdir: /home/ubuntu/cri-dockerd

    - name: Copy program
      shell: cp -a packaging/systemd/* /etc/systemd/system
      args:
        chdir: /home/ubuntu/cri-dockerd

    - name: Create cri-docker.service
      shell: sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
      args:
        chdir: /home/ubuntu/cri-dockerd

    - name: Deamon-reload
      systemd: 
        daemon-reload: true

    - name: Enable cri-docker.service
      systemd:
        name: cri-docker
        enabled: true
        state: restarted

    - name: Enable ipv4 forwarding
      shell: cat<<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF

    - name: Enable ipv4 forwarding2
      command: modprobe overlay

    - name: Enable ipv4 forwarding3
      command: modprobe br_netfilter

    - name: Enable ipv4 forwarding4
      shell: cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF

    - name: Enable ipv4 forwarding5
      shell: sysctl --system

    - name: Install package for kubernetes
      apt:
        pkg: 
          - apt-transport-https
          - ca-certificates
          - curl
        update_cache: true

    - name: Download google cloud archive key
      shell: curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name:  Add apt repo
      shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Install kubernetes
      apt:
        pkg:
          - kubelet
          - kubeadm
          - kubectl
        update_cache: true

    - name: mark version
      shell: apt-mark hold kubelet kubeadm kubectl


